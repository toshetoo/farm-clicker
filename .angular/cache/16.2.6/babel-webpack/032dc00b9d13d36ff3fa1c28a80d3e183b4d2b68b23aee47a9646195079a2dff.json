{"ast":null,"code":"import { BehaviorSubject, merge, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./tools.service\";\nexport class MoneyService {\n  constructor(toolsService) {\n    this.toolsService = toolsService;\n    this.money = new BehaviorSubject(0);\n    this.money$ = this.money.asObservable();\n    merge(...this.toolsService.getTools().map(tool => tool.income$)).pipe(\n    // tap(() => console.log('money', this.money.value)),\n    tap(money => this.money.next(this.money.value + money))).subscribe();\n  }\n  getMoney() {\n    return this.money.value;\n  }\n  addMoney(money) {\n    this.money.next(this.money.value + money);\n  }\n  subtractMoney(money) {\n    this.money.next(this.money.value - money);\n  }\n  static #_ = this.ɵfac = function MoneyService_Factory(t) {\n    return new (t || MoneyService)(i0.ɵɵinject(i1.ToolsService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MoneyService,\n    factory: MoneyService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","merge","tap","MoneyService","constructor","toolsService","money","money$","asObservable","getTools","map","tool","income$","pipe","next","value","subscribe","getMoney","addMoney","subtractMoney","_","i0","ɵɵinject","i1","ToolsService","_2","factory","ɵfac","providedIn"],"sources":["D:\\projects\\clicker-game-ng\\src\\app\\core\\services\\money.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, merge, tap } from 'rxjs';\nimport { ToolsService } from './tools.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MoneyService {\n\n  private money: BehaviorSubject<number> = new BehaviorSubject<number>(0);\n  public money$: Observable<number> = this.money.asObservable();\n\n  constructor(private toolsService: ToolsService) { \n    merge(\n      ...this.toolsService.getTools().map(tool => tool.income$)\n    ).pipe(\n      // tap(() => console.log('money', this.money.value)),\n      tap(money => this.money.next(this.money.value + money))\n    ).subscribe();\n  }\n\n  getMoney(): number {\n    return this.money.value;\n  }\n\n  addMoney(money: number) {\n    this.money.next(this.money.value + money);\n  }\n\n  subtractMoney(money: number) {\n    this.money.next(this.money.value - money);\n  }\n  \n}\n"],"mappings":"AACA,SAASA,eAAe,EAAcC,KAAK,EAAEC,GAAG,QAAQ,MAAM;;;AAM9D,OAAM,MAAOC,YAAY;EAKvBC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAHxB,KAAAC,KAAK,GAA4B,IAAIN,eAAe,CAAS,CAAC,CAAC;IAChE,KAAAO,MAAM,GAAuB,IAAI,CAACD,KAAK,CAACE,YAAY,EAAE;IAG3DP,KAAK,CACH,GAAG,IAAI,CAACI,YAAY,CAACI,QAAQ,EAAE,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,CAAC,CAC1D,CAACC,IAAI;IACJ;IACAX,GAAG,CAACI,KAAK,IAAI,IAAI,CAACA,KAAK,CAACQ,IAAI,CAAC,IAAI,CAACR,KAAK,CAACS,KAAK,GAAGT,KAAK,CAAC,CAAC,CACxD,CAACU,SAAS,EAAE;EACf;EAEAC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACX,KAAK,CAACS,KAAK;EACzB;EAEAG,QAAQA,CAACZ,KAAa;IACpB,IAAI,CAACA,KAAK,CAACQ,IAAI,CAAC,IAAI,CAACR,KAAK,CAACS,KAAK,GAAGT,KAAK,CAAC;EAC3C;EAEAa,aAAaA,CAACb,KAAa;IACzB,IAAI,CAACA,KAAK,CAACQ,IAAI,CAAC,IAAI,CAACR,KAAK,CAACS,KAAK,GAAGT,KAAK,CAAC;EAC3C;EAAC,QAAAc,CAAA,G;qBAxBUjB,YAAY,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZtB,YAAY;IAAAuB,OAAA,EAAZvB,YAAY,CAAAwB,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}