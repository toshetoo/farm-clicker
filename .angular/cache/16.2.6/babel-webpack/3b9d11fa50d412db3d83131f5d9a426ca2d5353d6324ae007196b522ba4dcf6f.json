{"ast":null,"code":"import { merge } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./tools.service\";\nexport class MoneyService {\n  constructor(toolsService) {\n    this.toolsService = toolsService;\n    this.money$ = merge(...this.toolsService.getTools().map(tool => tool.income$));\n  }\n  static #_ = this.ɵfac = function MoneyService_Factory(t) {\n    return new (t || MoneyService)(i0.ɵɵinject(i1.ToolsService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MoneyService,\n    factory: MoneyService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["merge","MoneyService","constructor","toolsService","money$","getTools","map","tool","income$","_","i0","ɵɵinject","i1","ToolsService","_2","factory","ɵfac","providedIn"],"sources":["D:\\projects\\clicker-game-ng\\src\\app\\core\\services\\money.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, merge } from 'rxjs';\nimport { ToolsService } from './tools.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MoneyService {\n\n  money$: Observable<number>;\n\n  constructor(private toolsService: ToolsService) { \n    this.money$ = merge(\n      ...this.toolsService.getTools().map(tool => tool.income$)\n    );\n  }\n}\n"],"mappings":"AACA,SAAqBA,KAAK,QAAQ,MAAM;;;AAMxC,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAC9B,IAAI,CAACC,MAAM,GAAGJ,KAAK,CACjB,GAAG,IAAI,CAACG,YAAY,CAACE,QAAQ,EAAE,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,CAAC,CAC1D;EACH;EAAC,QAAAC,CAAA,G;qBARUR,YAAY,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZb,YAAY;IAAAc,OAAA,EAAZd,YAAY,CAAAe,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}